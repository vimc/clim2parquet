[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "clim2parquet"
dynamic = ["version"]
description = 'Convert climate data CSVs to parquet format'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Pratik Gupte", email = "p.gupte24@imperial.ac.uk" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas",
  "pyarrow",
  "pytest>=8.3.5",
]

[project.urls]
Documentation = "https://github.com/vimc/clim2parquet#readme"
Issues = "https://github.com/vimc/clim2parquet/issues"
Source = "https://github.com/vimc/clim2parquet"

[tool.hatch.version]
path = "src/clim2parquet/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-mock",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=taskwait --cov=tests {args}"
no-cov = "cov --no-cov {args}"
cov-report-xml = [
  "- coverage combine",
  "coverage xml",
]
cov-ci = [
  "test-cov",
  "cov-report-xml",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.lint]
extra-dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "types-defusedxml",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src tests}"
style = [
  "ruff check {args:.}",
   "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff check --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.coverage.run]
source_pkgs = ["clim2parquet", "tests"]
branch = true
parallel = true
omit = [
  "src/clim2parquet/__about__.py",
]

[tool.coverage.paths]
clim2parquet = ["src/clim2parquet", "*/clim2parquet/src/clim2parquet"]
tests = ["tests", "*/clim2parquet/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 80
skip-string-normalization = true

[tool.ruff]
line-length = 80

[tool.ruff.lint]
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C",
  "D",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.uv.workspace]
members = ["data-raw"]

[tool.hatch.envs.docs]
extra-dependencies = [
  "mkdocs>=1.6.1",
  "mkdocs-bootstrap4>=0.1.5",
  "mkdocs-material>=9.6.7",
  "mkdocs-spellcheck[all]>=1.1.0",
  "mkdocstrings-python>=1.11.1",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build {args}"
serve = "mkdocs serve {args}"
